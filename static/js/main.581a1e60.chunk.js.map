{"version":3,"sources":["assets/loader.gif","assets/logo.png","components/Navbar/Navbar.js","components/Search/Search.js","components/HeroCard/HeroCard.js","components/Landing.js","components/Poster/Poster.js","components/Featured/Thor.js","components/Featured/BlackPanther.js","components/Featured/CaptainMarvel.js","components/Featured/SpiderMan.js","components/Featured/Featured.js","Footer.js","components/List.js","components/Hero/Hero.js","components/Series/Series.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","react_default","a","createElement","Navbar","className","dark","expand","NavbarBrand","href","src","logo","alt","Search","_ref","setSearching","setSearchResult","_useState","useState","_useState2","Object","slicedToArray","input","setInput","_useState3","_useState4","url","setUrl","firstUpdate","useRef","useLayoutEffect","current","fetch","concat","then","res","json","data","onSubmit","e","preventDefault","InputGroup","size","InputGroupAddon","addonType","class","Input","placeholder","onChange","target","value","HeroCard","hero","Fragment","Card","CardImg","top","width","thumbnail","path","extension","CardBody","CardTitle","name","Landing","heros","setCount","length","map","key","id","Link","to","components_HeroCard_HeroCard","Button","color","block","onClick","count","Poster","Thor","setHero","useEffect","results","ClipLoader_default","BlackPanther","CaptainMarvel","SpiderMan","Featured","style","margin","Featured_Thor","Featured_BlackPanther","Featured_CaptainMarvel","Featured_SpiderMan","footer","height","background","textAlign","paddingTop","Footer","List","React","memo","isLoading","searching","searchResult","Loader","components_Poster_Poster","components_Featured_Featured","components_Search_Search","components_Landing","src_Footer","getSeriesId","index","lastIndexOf","substr","Hero","props","setIsLoading","characterId","parseInt","match","params","console","log","description","series","available","items","item","resourceURI","Badge","fontSize","Series","setSeries","title","App","setHeroes","_useState5","_useState6","prevHeros","toConsumableArray","BrowserRouter","components_Navbar_Navbar","Route","exact","render","components_List","assign","components_Hero_Hero","components_Series_Series","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.581a1e60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.781335f2.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.eaf230e6.png\";","import React from \"react\";\r\nimport { Navbar, NavbarBrand } from \"reactstrap\";\r\nimport logo from \"../../assets/logo.png\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <Navbar className=\"navbar\" dark expand=\"md\">\r\n      <NavbarBrand href=\"/\" className=\"mx-auto brand\">\r\n        <img src={logo} alt=\"\" className=\"img\" />\r\n      </NavbarBrand>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useLayoutEffect, useRef } from \"react\";\r\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\r\nimport \"./Search.css\";\r\n\r\nfunction Search({ setSearching, setSearchResult }) {\r\n  const [input, setInput] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  const handleInput = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setUrl(input);\r\n    setInput(\"\");\r\n    setSearching(true);\r\n  };\r\n\r\n  const firstUpdate = useRef(true);\r\n  useLayoutEffect(() => {\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n    fetch(\r\n      `https://gateway.marvel.com/v1/public/characters?nameStartsWith=${url}&ts=1551892957053&apikey=ed0db551a956a22bc791744a20041f60&hash=28c71675f79648ff557cf218a277715f`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => setSearchResult(data.data));\r\n  }, [url]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <InputGroup size=\"md\" className=\"ml-3 mb-4 input_group\">\r\n        <InputGroupAddon addonType=\"prepend\" className=\"icon\">\r\n          <i class=\"fas fa-search\" />\r\n        </InputGroupAddon>\r\n        <Input placeholder=\"Search\" className=\"search\" onChange={handleInput} />\r\n      </InputGroup>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./HeroCard.css\";\r\nimport { Card, CardImg, CardBody, CardTitle } from \"reactstrap\";\r\n\r\nfunction HeroCard({ hero }) {\r\n  return (\r\n    <React.Fragment>\r\n      <Card className=\"_card\">\r\n        <CardImg\r\n          className=\"_img\"\r\n          top\r\n          width=\"80%\"\r\n          src={`${hero.thumbnail.path}/portrait_fantastic.${\r\n            hero.thumbnail.extension\r\n          }`}\r\n        />\r\n        <div className=\"_bar\" />\r\n        <CardBody className=\"_body\">\r\n          <CardTitle className=\"title\">{hero.name}</CardTitle>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default HeroCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\";\r\nimport HeroCard from \"./HeroCard/HeroCard\";\r\n\r\nfunction Landing({ heros, setCount }) {\r\n  return (\r\n    <div>\r\n      <div className=\"row mx-auto\">\r\n        {heros.length === 0 ? (\r\n          <h2>Not results found</h2>\r\n        ) : (\r\n          heros.map(hero => (\r\n            <div className=\"col-lg-3 col-md-4 col-sm-6 mb-3 pl-5\" key={hero.id}>\r\n              <Link to={`/character/${hero.id}`}>\r\n                <HeroCard hero={hero} />\r\n              </Link>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      {setCount && heros.length > 0 ? (\r\n        <Button\r\n          color=\"primary\"\r\n          block\r\n          className=\"mb-2\"\r\n          onClick={() => setCount(count => count + 20)}\r\n        >\r\n          Load More Superheroes\r\n        </Button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport \"./Poster.css\";\r\n\r\nfunction Poster() {\r\n  return (\r\n    <div className=\"poster\">\r\n      <div className=\"sheet\" />\r\n      <div className=\"poster_title\">\r\n        <h2>MARVEL CHARACTERS</h2>\r\n        <p>\r\n          DIVE INTO THE DAZZLING DOMAIN OF ALL THE CLASSIC CHARACTERS YOU LOVE\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Poster;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardImg, CardBody, CardTitle } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Featured.css\";\r\nimport \"../HeroCard/HeroCard.css\";\r\n\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nfunction Thor() {\r\n  const [hero, setHero] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://gateway.marvel.com/v1/public/characters?nameStartsWith=thor&ts=1551892957053&apikey=ed0db551a956a22bc791744a20041f60&hash=28c71675f79648ff557cf218a277715f\"\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => setHero(data.data.results[0]));\r\n  }, []);\r\n  return hero ? (\r\n    <React.Fragment>\r\n      <Link to={`/character/${hero.id}`}>\r\n        <Card className=\"_card\">\r\n          <CardImg\r\n            className=\"_img\"\r\n            top\r\n            width=\"80%\"\r\n            src={`${hero.thumbnail.path}/portrait_fantastic.${\r\n              hero.thumbnail.extension\r\n            }`}\r\n          />\r\n          <div className=\"_bar\" />\r\n          <CardBody className=\"_body\">\r\n            <CardTitle className=\"title\">{hero.name}</CardTitle>\r\n          </CardBody>\r\n        </Card>\r\n      </Link>\r\n    </React.Fragment>\r\n  ) : (\r\n    <ClipLoader size={100} color={\"#333\"} />\r\n  );\r\n}\r\n\r\nexport default Thor;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardImg, CardBody, CardTitle } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Featured.css\";\r\n\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nfunction BlackPanther() {\r\n  const [hero, setHero] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://gateway.marvel.com/v1/public/characters?nameStartsWith=black%20panther&ts=1551892957053&apikey=ed0db551a956a22bc791744a20041f60&hash=28c71675f79648ff557cf218a277715f\"\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => setHero(data.data.results[0]));\r\n  }, []);\r\n  return hero ? (\r\n    <React.Fragment>\r\n      <Link to={`/character/${hero.id}`}>\r\n        <Card className=\"_card\">\r\n          <CardImg\r\n            className=\"_img\"\r\n            top\r\n            width=\"80%\"\r\n            src={`${hero.thumbnail.path}/portrait_fantastic.${\r\n              hero.thumbnail.extension\r\n            }`}\r\n          />\r\n          <div className=\"_bar\" />\r\n          <CardBody className=\"_body\">\r\n            <CardTitle className=\"title\">{hero.name}</CardTitle>\r\n          </CardBody>\r\n        </Card>\r\n      </Link>\r\n    </React.Fragment>\r\n  ) : (\r\n    <ClipLoader size={100} color={\"#333\"} />\r\n  );\r\n}\r\n\r\nexport default BlackPanther;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardImg, CardBody, CardTitle } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Featured.css\";\r\n\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nfunction CaptainMarvel() {\r\n  const [hero, setHero] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://gateway.marvel.com/v1/public/characters?nameStartsWith=captain%20marvel&ts=1551892957053&apikey=ed0db551a956a22bc791744a20041f60&hash=28c71675f79648ff557cf218a277715f\"\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => setHero(data.data.results[0]));\r\n  }, []);\r\n  return hero ? (\r\n    <React.Fragment>\r\n      <Link to={`/character/${hero.id}`}>\r\n        <Card className=\"_card\">\r\n          <CardImg\r\n            className=\"_img\"\r\n            top\r\n            width=\"80%\"\r\n            src={`${hero.thumbnail.path}/portrait_fantastic.${\r\n              hero.thumbnail.extension\r\n            }`}\r\n          />\r\n          <div className=\"_bar\" />\r\n          <CardBody className=\"_body\">\r\n            <CardTitle className=\"title\">Caprain Marvel</CardTitle>\r\n          </CardBody>\r\n        </Card>\r\n      </Link>\r\n    </React.Fragment>\r\n  ) : (\r\n    <ClipLoader size={100} color={\"#333\"} />\r\n  );\r\n}\r\n\r\nexport default CaptainMarvel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardImg, CardBody, CardTitle } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Featured.css\";\r\n\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nfunction SpiderMan() {\r\n  const [hero, setHero] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://gateway.marvel.com/v1/public/characters?nameStartsWith=spider-man&ts=1551892957053&apikey=ed0db551a956a22bc791744a20041f60&hash=28c71675f79648ff557cf218a277715f\"\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => setHero(data.data.results[0]));\r\n  }, []);\r\n  return hero ? (\r\n    <React.Fragment>\r\n      <Link to={`/character/${hero.id}`}>\r\n        <Card className=\"_card\">\r\n          <CardImg\r\n            className=\"_img\"\r\n            top\r\n            width=\"80%\"\r\n            src={`${hero.thumbnail.path}/portrait_fantastic.${\r\n              hero.thumbnail.extension\r\n            }`}\r\n          />\r\n          <div className=\"_bar\" />\r\n          <CardBody className=\"_body\">\r\n            <CardTitle className=\"title\">{hero.name}</CardTitle>\r\n          </CardBody>\r\n        </Card>\r\n      </Link>\r\n    </React.Fragment>\r\n  ) : (\r\n    <ClipLoader size={100} color={\"#333\"} />\r\n  );\r\n}\r\n\r\nexport default SpiderMan;\r\n","import React from \"react\";\r\nimport Thor from \"./Thor\";\r\nimport BlackPanther from \"./BlackPanther\";\r\nimport CaptainMarvel from \"./CaptainMarvel\";\r\nimport SpiderMan from \"./SpiderMan\";\r\nimport \"./Featured.css\";\r\n\r\nfunction Featured() {\r\n  return (\r\n    <div>\r\n      <h2 className=\"py-2 _title-bars\">FEATURED CHARACTERS</h2>\r\n      <div className=\"row mx-auto mb-5\">\r\n        <div\r\n          className=\"col-lg-3 col-md-4 col-sm-6 mb-3\"\r\n          style={{ width: \"100%\", margin: \"0 !important\" }}\r\n        >\r\n          <Thor />\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-4 col-sm-6 mb-3\">\r\n          <BlackPanther />\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-4 col-sm-6 mb-3\">\r\n          <CaptainMarvel />\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-4 col-sm-6 mb-3\">\r\n          <SpiderMan />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Featured;\r\n","import React from \"react\";\r\n\r\nconst style = {\r\n  footer: {\r\n    height: \"80px\",\r\n    width: \"100vw\",\r\n    background: \"#333\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    paddingTop: \"20px\"\r\n  }\r\n};\r\n\r\nfunction Footer() {\r\n  return <div style={style.footer}>Powered by &copy; Marvel API</div>;\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport Search from \"./Search/Search\";\r\nimport Loader from \"../assets/loader.gif\";\r\nimport Landing from \"./Landing\";\r\nimport Poster from \"./Poster/Poster\";\r\nimport Featured from \"./Featured/Featured\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst List = React.memo(function List({ isLoading, heros, setCount }) {\r\n  const [searching, setSearching] = useState(false);\r\n  const [searchResult, setSearchResult] = useState();\r\n\r\n  return isLoading ? (\r\n    <img src={Loader} className=\"loader\" alt=\"\" />\r\n  ) : (\r\n    <div>\r\n      <Poster />\r\n      <div className=\"container mt-5 \">\r\n        <Featured />\r\n        <div className=\"dropdown-divider\" />\r\n        <h2 className=\"py-2 mt-5 _title-bars list-title\">\r\n          MARVEL CHARACTERS LIST\r\n        </h2>\r\n        <Search setSearching={setSearching} setSearchResult={setSearchResult} />\r\n        {searching ? (\r\n          !searchResult ? (\r\n            <img src={Loader} alt=\"\" />\r\n          ) : (\r\n            <Landing heros={searchResult.results} />\r\n          )\r\n        ) : (\r\n          <Landing heros={heros} setCount={setCount} />\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default List;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Loader from \"../../assets/loader.gif\";\r\n\r\nimport { Badge } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// get last part of the URL\r\nconst getSeriesId = url => {\r\n  let index = url.lastIndexOf(\"/\");\r\n  return url.substr(index);\r\n};\r\n\r\nconst Hero = React.memo(function Hero(props) {\r\n  const [hero, setHero] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const characterId = parseInt(props.match.params.id);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://gateway.marvel.com/v1/public/characters/${characterId}?ts=1551892957053&apikey=ed0db551a956a22bc791744a20041f60&hash=28c71675f79648ff557cf218a277715f`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setHero(data.data.results[0]);\r\n        setIsLoading(false);\r\n      });\r\n  }, [characterId]);\r\n\r\n  console.log(hero);\r\n  // if (hero) {\r\n  //   let url = hero.series.items[0].resourceURI;\r\n  //   console.log(getSeriesId(url));\r\n  // }\r\n\r\n  return isLoading ? (\r\n    <img src={Loader} className=\"loader\" alt=\"\" />\r\n  ) : (\r\n    <div>\r\n      <div className=\"_title\">\r\n        <img\r\n          src={`${hero.thumbnail.path}/detail.${hero.thumbnail.extension}`}\r\n          alt=\"\"\r\n          className=\"image\"\r\n        />\r\n        <h1 className=\"name ml-4\">{hero.name}</h1>\r\n      </div>\r\n      <div className=\"container mt-5 mb-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <h2>Description</h2>\r\n            <div className=\"dropdown-divider\" />\r\n            {hero.description ? hero.description : \"Not Available\"}\r\n          </div>\r\n        </div>\r\n        {hero.series.available > 0 ? (\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col-md-6\">\r\n              <h2>Series</h2>\r\n              <div className=\"dropdown-divider\" />\r\n              {hero.series.items.map(item => (\r\n                <Link\r\n                  key={item.name}\r\n                  to={`/series${getSeriesId(item.resourceURI)}`}\r\n                >\r\n                  <Badge\r\n                    className=\"mx-1\"\r\n                    style={{ fontSize: \"0.8rem\", margin: \"2px\" }}\r\n                    color=\"secondary\"\r\n                  >\r\n                    {item.name}\r\n                  </Badge>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Hero;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Series.css\";\r\nimport Loader from \"../../assets/loader.gif\";\r\n\r\nconst Series = React.memo(function Series(props) {\r\n  // get id from router params\r\n  let id = props.match.params.id;\r\n\r\n  const [series, setSeries] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://gateway.marvel.com/v1/public/series/${id}?ts=1551892957053&apikey=ed0db551a956a22bc791744a20041f60&hash=28c71675f79648ff557cf218a277715f`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setSeries(data.data.results[0]);\r\n        setIsLoading(false);\r\n      });\r\n  }, [id]);\r\n\r\n  return isLoading ? (\r\n    <img src={Loader} className=\"loader\" alt=\"\" />\r\n  ) : (\r\n    <div>\r\n      <div className=\"_title\">\r\n        <img\r\n          src={`${series.thumbnail.path}/detail.${series.thumbnail.extension}`}\r\n          alt=\"\"\r\n          className=\"image\"\r\n        />\r\n        <h1 className=\"name ml-4\">{series.title}</h1>\r\n      </div>\r\n      <div className=\"container mt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <h2>Description</h2>\r\n            <div className=\"dropdown-divider\" />\r\n            {series.description ? series.description : \"Not Available\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Series;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Nav from \"./components/Navbar/Navbar\";\nimport List from \"./components/List\";\nimport Hero from \"./components/Hero/Hero\";\nimport Series from \"./components/Series/Series\";\n\nfunction App() {\n  const [heros, setHeroes] = useState([]);\n  const [count, setCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(\n      `https://gateway.marvel.com/v1/public/characters?limit=20&offset=${count}&ts=1551892957053&apikey=ed0db551a956a22bc791744a20041f60&hash=28c71675f79648ff557cf218a277715f`\n    )\n      .then(res => res.json())\n      .then(data => {\n        setHeroes(prevHeros => [...prevHeros, ...data.data.results]);\n        setIsLoading(false);\n      });\n  }, [count]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Route\n          exact\n          path=\"/\"\n          render={props => (\n            <List\n              {...props}\n              heros={heros}\n              setCount={setCount}\n              isLoading={isLoading}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/character/:id\"\n          render={props => <Hero {...props} />}\n        />\n        <Route\n          exact\n          path=\"/series/:id\"\n          render={props => <Series {...props} />}\n        />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}